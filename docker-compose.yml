version: '3.7'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./config/rabbitmq/rabbitmq.config:/etc/rabbitmq/rabbitmq.config:rw
      - ./config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:rw
      - ./config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  library-mongo-auth:
    container_name: library-mongo-auth
    image: mongo
    ports:
      - 27100:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: admin
    volumes:
      - /Users/patryksadok/Databases
      - ./config/mongodb/auth/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    depends_on:
      - rabbitmq

  library-mongo-express-auth:
    container_name: library-mongo-express-auth
    image: mongo-express
    restart: always
    links:
      - 'library-mongo-auth:mongo'
    ports:
      - 9000:8081
    depends_on:
      - rabbitmq
    links:
      - library-mongo-auth
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: library-mongo-auth
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password

  auth-service-backend:
    container_name: auth-service-backend
    build:
      context: ./auth-service/
    env_file: ./auth-service/.env
    ports:
      - 8082:3015
    tty: true
    stdin_open: true
    depends_on:
      - library-mongo-auth
      - library-mongo-express-auth
      - rabbitmq
    volumes:
      - ./auth-service:/usr/src/app
      - ./auth-service/node_modules:/usr/src/app/node_modules
    command: yarn start:dev

  library-mongo-book:
    container_name: library-mongo-book
    image: mongo
    ports:
      - 27101:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - /Users/patryksadok/Databases
    depends_on:
      - rabbitmq

  library-mongo-express-book:
    container_name: library-mongo-express-book
    image: mongo-express
    restart: always
    links:
      - 'library-mongo-book:mongo'
    ports:
      - 9001:8081
    depends_on:
      - library-mongo-book
      - rabbitmq
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: library-mongo-book
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password

  book-service-backend:
    container_name: book-service-backend
    build:
      context: ./book-service/
    env_file: ./book-service/.env
    ports:
      - 8083:3015
    tty: true
    stdin_open: true
    depends_on:
      - library-mongo-book
      - library-mongo-express-book
      - rabbitmq
    volumes:
      - ./book-service:/usr/src/app
      - ./book-service/node_modules:/usr/src/app/node_modules
    command: yarn start:dev

  library-mongo-rent:
    container_name: library-mongo-rent
    image: mongo
    ports:
      - 27102:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - /Users/patryksadok/Databases
    depends_on:
      - rabbitmq

  library-mongo-express-rent:
    container_name: library-mongo-express-rent
    image: mongo-express
    restart: always
    links:
      - 'library-mongo-rent:mongo'
    ports:
      - 9002:8081
    depends_on:
      - library-mongo-rent
      - rabbitmq
    environment:
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: library-mongo-rent
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password

  rent-service-backend:
    container_name: rent-service-backend
    build:
      context: ./rent-service/
    env_file: ./rent-service/.env
    ports:
      - 8084:3015
    tty: true
    stdin_open: true
    depends_on:
      - library-mongo-rent
      - library-mongo-express-rent
      - rabbitmq
    volumes:
      - ./rent-service:/usr/src/app
      - ./rent-service/node_modules:/usr/src/app/node_modules
    command: yarn start:dev